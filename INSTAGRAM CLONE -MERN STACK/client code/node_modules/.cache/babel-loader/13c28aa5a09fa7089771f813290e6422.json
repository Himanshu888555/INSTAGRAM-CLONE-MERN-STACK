{"ast":null,"code":"var _jsxFileName = \"D:\\\\javascript\\\\MERN COURSE\\\\client\\\\src\\\\components\\\\screens\\\\CreatePost.js\";\nimport React, { useState, useEffect } from 'react';\nimport M from 'materialize-css';\nimport { useHistory } from 'react-router-dom';\n\nconst CreatePost = () => {\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/CreatPost\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        title,\n        body,\n        pic: url\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        M.toast({\n          html: data.error,\n          classes: \"#c62828 red darken-3\"\n        });\n      } else {\n        M.toast({\n          html: \"\",\n          classes: \"#43a047 green darken-1\"\n        });\n        history.push('/');\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [url]);\n\n  const postDetails = () => {\n    const data = new FormData(); //we are uplaoding a file so we have to use formdata\n\n    data.append(\"file\", image); //inside the formdata we have to append some info or data \n\n    data.append(\"upload_preset\", \"insta-clone\"); //these are the cloudinary  \n\n    data.append(\"cloud_name\", \"df7pdatbh\"); //this is the unique name of my login in the cloudinary\n\n    fetch(\"https://api.cloudinary.com/v1_1/df7pdatbh/image/upload\", {\n      //netwrok request  //cpoy the url from the coludniary API app url  //append or add   /image/upload    into the string \n      method: \"post\",\n      //we will call the method body  from above const[body,setBody]\n      body: data // we will attach the data from   const data = new FormData into the post details. for sending details \n\n    }).then(res => res.json()) // we will send the respond \n    .then(data => {\n      setUrl(data.url); //data will be displayed in console\n    }).catch(err => {\n      console.log(err);\n    }); //if some error then we catch it in error\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card input-filed auth-card center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"title\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"body\",\n    value: body,\n    onChange: e => setBody(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-field input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn  #64b5f6 blue lighten-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"ADD\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: e => setImage(e.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-path-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"file-path validate\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      borderRadius: \"80px\"\n    },\n    className: \"btn  #64b5f6 blue lighten-2\",\n    onClick: () => postDetails(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }, \"+\")));\n};\n\nexport default CreatePost;","map":{"version":3,"sources":["D:/javascript/MERN COURSE/client/src/components/screens/CreatePost.js"],"names":["React","useState","useEffect","M","useHistory","CreatePost","history","title","setTitle","body","setBody","image","setImage","url","setUrl","fetch","method","headers","localStorage","getItem","JSON","stringify","pic","then","res","json","data","error","toast","html","classes","push","catch","err","console","log","postDetails","FormData","append","e","target","value","files","borderRadius"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport M from 'materialize-css'\r\nimport{useHistory} from 'react-router-dom'\r\n\r\n\r\nconst CreatePost = () => {\r\n    const history =useHistory()\r\n    const[title,setTitle]=useState(\"\")\r\n    const[body,setBody]=useState(\"\")\r\n    const[image,setImage]=useState(\"\")\r\n    const[url,setUrl]=useState(\"\")\r\n    useEffect(()=>{\r\n       \r\n        \r\n  fetch(\"/CreatPost\",{\r\n    method:\"post\",\r\n    headers:{\r\n    \"Content-Type\":\"application/json\",\r\n    \"Authorization\" :\"Bearer \"+localStorage.getItem(\"jwt\")\r\n    },\r\n    body:JSON.stringify({\r\n    \r\n    title,\r\n    body,\r\n    pic:url\r\n    })\r\n}).then(res=>res.json())\r\n    .then(data=>{\r\n      \r\n        if(data.error)\r\n        {\r\n           M.toast({html: data.error , classes:\"#c62828 red darken-3\"}) \r\n        }\r\n        else{\r\n            M.toast({html: \"\" , classes:\"#43a047 green darken-1\"})\r\n            history.push('/')\r\n        }\r\n    }).catch(err=>{console.log(err)})\r\n    },[url])\r\n\r\n    const postDetails=()=>{\r\nconst data =new FormData() //we are uplaoding a file so we have to use formdata\r\ndata.append(\"file\",image)  //inside the formdata we have to append some info or data \r\ndata.append(\"upload_preset\",\"insta-clone\") //these are the cloudinary  \r\ndata.append(\"cloud_name\",\"df7pdatbh\")   //this is the unique name of my login in the cloudinary\r\n\r\nfetch(\"https://api.cloudinary.com/v1_1/df7pdatbh/image/upload\",{   //netwrok request  //cpoy the url from the coludniary API app url  //append or add   /image/upload    into the string \r\n      method:\"post\",    //we will call the method body  from above const[body,setBody]\r\n       body:data   // we will attach the data from   const data = new FormData into the post details. for sending details \r\n    })\r\n    .then(res=>res.json()) // we will send the respond \r\n\r\n    .then(data=>{\r\n        setUrl(data.url) ;\r\n         //data will be displayed in console\r\n    })\r\n    .catch(err=>{console.log(err)})   //if some error then we catch it in error\r\n    \r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n   return(\r\n\r\n    \r\n       <div className=\"card input-filed auth-card center\">\r\n           <input type=\"text\" placeholder=\"title\" value={title}onChange={(e)=>setTitle(e.target.value)} />\r\n           <input type=\"text\" placeholder=\"body\" value={body}onChange={(e)=>setBody(e.target.value)} />\r\n                    <div className=\"file-field input-field\">\r\n                <div className=\"btn  #64b5f6 blue lighten-2\">\r\n                    <span>ADD</span>\r\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"  />\r\n                </div>\r\n                </div>\r\n\r\n\r\n                <button style={{borderRadius:\"80px\"}} className=\"btn  #64b5f6 blue lighten-2\" \r\n                onClick={()=>postDetails()}>\r\n                      <i   className=\"material-icons1 \">+</i>\r\n                   </button>\r\n       </div>\r\n    \r\n\r\n   )\r\n}\r\n\r\n\r\nexport default CreatePost"]},"metadata":{},"sourceType":"module"}